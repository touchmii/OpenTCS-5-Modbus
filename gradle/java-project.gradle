apply plugin: 'java'

sourceCompatibility = '1.8'
archivesBaseName = name.toLowerCase()

repositories {
  jcenter()
}

dependencies {
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'
  compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21', classifier: 'javadoc'

  compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
  compile group: 'com.google.guava', name: 'guava', version: '19.0'
  compileOnly group: 'com.google.guava', name: 'guava', version: '19.0', classifier: 'sources'

  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
  testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'
}

compileJava {
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

compileTestJava {
  options.compilerArgs << "-Xlint:all"
  options.compilerArgs << "-Xlint:-serial"
}

task sourcesJar(type: Jar, dependsOn: classes, description: 'Creates a jar from the source files.') {
  classifier = 'sources'
  from sourceSets.main.allSource
}

test {
  ignoreFailures = true
  systemProperties.put("java.awt.headless", "true")
}

ext {
  // Attributes for the AsciiDoc documentation to include code from source files
  javaSrcDir = sourceSets.main.java.srcDirs[0]
  javaClassesDir = sourceSets.main.output.classesDirs
  testSrcDir = sourceSets.test.java.srcDirs[0]
}
